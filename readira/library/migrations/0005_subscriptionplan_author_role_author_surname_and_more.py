# Generated by Django 5.2.3 on 2025-07-21 18:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('library', '0004_alter_author_image'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Plan Name')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Price')),
                ('duration_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duration (days)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
            },
        ),
        migrations.AddField(
            model_name='author',
            name='role',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Role Name'),
        ),
        migrations.AddField(
            model_name='author',
            name='surname',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Surname'),
        ),
        migrations.AddField(
            model_name='readingmaterials',
            name='availability',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='readingmaterials',
            name='price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='author',
            name='bio',
            field=models.TextField(blank=True, null=True, verbose_name='About the author'),
        ),
        migrations.AlterField(
            model_name='author',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True, verbose_name='Date of Birth'),
        ),
        migrations.AlterField(
            model_name='author',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='authors/', verbose_name='Image'),
        ),
        migrations.AlterField(
            model_name='author',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Author'),
        ),
        migrations.AlterField(
            model_name='author',
            name='written_genres',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Genres'),
        ),
        migrations.AlterField(
            model_name='booktype',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='genre',
            name='name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='rating',
            name='book',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='library.readingmaterials', verbose_name='Review'),
        ),
        migrations.AlterField(
            model_name='rating',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='rating',
            name='value',
            field=models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AlterField(
            model_name='readingmaterials',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='books', to='library.author', verbose_name='Author'),
        ),
        migrations.AlterField(
            model_name='readingmaterials',
            name='book_summary',
            field=models.TextField(blank=True, null=True, verbose_name='Book Summary'),
        ),
        migrations.AlterField(
            model_name='readingmaterials',
            name='genre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='library.genre', verbose_name='Genre'),
        ),
        migrations.AlterField(
            model_name='readingmaterials',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='reading_materials/', verbose_name='Image'),
        ),
        migrations.AlterField(
            model_name='readingmaterials',
            name='reading_material_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='library.booktype', verbose_name='Type'),
        ),
        migrations.AlterField(
            model_name='readingmaterials',
            name='title',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='review',
            name='book',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='library.readingmaterials', verbose_name='Reading Material Review'),
        ),
        migrations.AlterField(
            model_name='review',
            name='content',
            field=models.TextField(blank=True, null=True, verbose_name='Content'),
        ),
        migrations.AlterField(
            model_name='review',
            name='title',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='review',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Category')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='library.category')),
            ],
        ),
        migrations.AddField(
            model_name='readingmaterials',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='library.category'),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='library.subscriptionplan', verbose_name='Plan')),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'unique_together': {('user', 'plan')},
            },
        ),
    ]
